#!/bin/sh
# sepostgresql	This is the init script for starting up SE-PostgreSQL
#
# chkconfig: - 64 36
# description: Starts and stops the SE-PostgreSQL backend daemon
# processname: postmaster
# pidfile: /var/run/postmaster.pid
#---------------------------------------------------------------------

PGVERSION=8.2.3
PGMAJORVERSION=`echo "$PGVERSION" | sed 's/^\([0-9]*\.[0-9]*\).*$/\1/'`
SEPGVERSION="${PGVERSION}-0.175"

# source function library
. /etc/rc.d/init.d/functions

# get config
. /etc/sysconfig/network

# find the name of the script
NAME=`basename $0`
if [ ${NAME:0:1} = "S" -o ${NAME:0:1} = "K" ]; then
    NAME=${NAME:3}
fi

# set defaults for configurable variables
SEPGENGINE=/opt/sepgsql/bin
SEPGDATA=/var/lib/sepgsql/data
SEPGLOG_STARTUP=/var/lib/sepgsql/pgstartup.log
SEPGLOG=/var/log/sepostgresql.log
SEPGOPTS="-p 5432"

# override defaults from /etc/sysconfig/sepostgresql
test -f /etc/sysconfig/${NAME} && . /etc/sysconfig/${NAME}

# Check that networking is up.
test "${NETWORKING}" = "no" && exit 0
test -f "${SEPGENGINE}/postmaster" || exit 1

script_result=1

do_start() {
    PSQL_START=$"Starting ${NAME} service: "
    echo -n "$PSQL_START"

    # make sure startup-time log file is valid
    if [ ! -e "${SEPGLOG_STARTUP}" -a ! -h "${SEPGLOG_STARTUP}" ]; then
	touch "${SEPGLOG_STARTUP}" || exit 1
	chown sepgsql:sepgsql "${SEPGLOG_STARTUP}"
	chmod 600 "${SEPGLOG_STARTUP}"
	restorecon "${SEPGLOG_STARTUP}"
    fi
    
    # check for the SEPGDATA structure
    if [ -f "${SEPGDATA}/PG_VERSION" ] && [ -d "$SEPGDATA/base" ]; then
	if [ x`cat "${SEPGDATA}/PG_VERSION"` != x"${PGMAJORVERSION}" ]; then
	    failure "$PSQL_START"
	    echo
	    echo "HINT: An old version of the database format was found."
	    echo "HINT: You need to upgrade the data format before using SE-PostgreSQL."
	    exit 1
	fi
    else
	failure "$PSQL_START"
	echo
	echo "HINT: ${SEPGDATA} is missing."
	echo "HINT: Use '/etc/init.d/${NAME} initdb'"
	echo "HINT:   to initialize the database cluster first."
	script_result=1
	exit 1
    fi

    # make sure SEPGLOG
    touch ${SEPGLOG}
    chown sepgsql:sepgsql ${SEPGLOG}
    chmod 600 ${SEPGLOG}
    test -x /sbin/restorecon && /sbin/restorecon ${SEPGLOG}

    runuser - sepgsql -- -c "${SEPGENGINE}/pg_ctl start -D ${SEPGDATA} -l ${SEPGLOG} -o '${SEPGOPTS}'" >> ${SEPGLOG_STARTUP} 2>&1 < /dev/null
    sleep 1
    if runuser - sepgsql -- -c "${SEPGENGINE}/pg_ctl status -D ${SEPGDATA}" >& /dev/null; then
	success "$PSQL_START"
    else
	failure "$PSQL_START"
	script_result=1
    fi
    echo
}

do_stop() {
    echo -n $"Stopping ${NAME} service: "
    runuser - sepgsql -- -c "${SEPGENGINE}/pg_ctl stop -D ${SEPGDATA}" \
	>> ${SEPGLOG_STARTUP} 2>&1 < /dev/null
    script_result=$?
    if [ $script_result -eq 0 ]; then
	echo_success
    else
	echo_failure
	script_result=1
    fi
    echo
}

do_status() {
    (
	runuser - sepgsql -- -c "${SEPGENGINE}/pg_ctl status -D ${SEPGDATA}" 2>&1 
	script_result=$?
    ) | head -1 | sed "s/^pg_ctl:/${NAME}:/g"
}

do_restart() {
    echo -n $"Restarting ${NAME} service: "
    runuser - sepgsql -- -c "${SEPGENGINE}/pg_ctl restart -D ${SEPGDATA}" \
	>> ${SEPGLOG_STARTUP} 2>&1 < /dev/null
    script_result=$?
    if [ $script_result -eq 0 ]; then
	echo_success
    else
	echo_failure
	script_result=1
    fi
    echo
}

do_condrestart() {
    runuser - sepgsql -- -c "${SEPGENGINE}/pg_ctl restart -D ${SEPGDATA}" >& /dev/null
    test $? -eq 0 && restart
}

do_condstop() {
    runuser - sepgsql -- -c "${SEPGENGINE}/pg_ctl restart -D ${SEPGDATA}" >& /dev/null
    test $? -eq 0 && stop
}

do_reload() {
    echo -n $"Restarting ${NAME} service: "
    runuser - sepgsql -- -c "${SEPGENGINE}/pg_ctl reload -D ${SEPGDATA}" \
	>> ${SEPGLOG_STARTUP} 2>&1 < /dev/null
    script_result=$?
    if [ $script_result -eq 0 ]; then
	echo_success
    else
	echo_failure
	script_result=1
    fi
    echo
}

do_initdb() {
    echo -n $"Initializing database: "

    if [ -f "${SEPGDATA}/PG_VERSION" ]; then
	echo_failure
	echo
	echo "HINT: Data directory is not empty"
	script_result=1
    else
	if [ ! -e "${SEPGDATA}" -a ! -h "${SEPGDATA}" ]; then
	    mkdir -p "${SEPGDATA}" || exit 1
	    chown sepgsql:sepgsql "${SEPGDATA}"
	    chmod 600 "${SEPGDATA}"
	fi
	# cleanup SELinux labeling for "${SEPGDATA}"
	test -x /sbin/restorecon && /sbin/restorecon -R "${SEPGDATA}"
	# Initialize the database
	runuser -- sepgsql -c "${SEPGENGINE}/initdb -D ${SEPGDATA} -A 'ident sameuser'" >> "${SEPGLOG_STARTUP}" 2>&1 < /dev/null
	if [ -f "${SEPGDATA}/PG_VERSION" ]; then
	    echo_success
	else
	    echo_failure
	    script_result=1
	fi
	echo
    fi
}

# see how we were called.
case "$1" in
    start)
        do_start
	;;
    stop)
        do_stop
	;;
    status)
        do_status
	;;
    restart)
        do_restart
	;;
    condrestart)
        do_condrestart
	;;
    condstop)
        do_condstop
	;;
    reload|force-reload)
        do_reload
	;;
    initdb)
        do_initdb
	;;
    *)
        echo $"Usage: $0 {start|stop|status|restart|condrestart|condstop|reload|force-reload|initdb}"
        exit 1
    ;;
esac

exit ${script_result}
