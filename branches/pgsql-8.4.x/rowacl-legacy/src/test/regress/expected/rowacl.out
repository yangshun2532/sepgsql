--
-- Test row-level access control list
--
-- Suppress NOTICE messages when users/groups don't exist
SET client_min_messages TO 'error';
DROP TABLE IF EXISTS ROWACL_TBL_F;
DROP TABLE IF EXISTS ROWACL_TBL_P;
DROP ROLE IF EXISTS ragroup;
DROP ROLE IF EXISTS rausr_o;
DROP ROLE IF EXISTS rausr_x;
DROP ROLE IF EXISTS rausr_y;
DROP ROLE IF EXISTS rausr_z;
RESET client_min_messages;
-- initial setups
CREATE USER rausr_o;	-- owner
CREATE USER rausr_x;
CREATE USER rausr_y;
CREATE USER rausr_z;
CREATE GROUP ragroup WITH USER rausr_x, rausr_y;
SET SESSION AUTHORIZATION rausr_o;
CREATE TABLE ROWACL_TBL_P (a int primary key, b text)
	WITH (row_level_acl=on);
NOTICE:  CREATE TABLE / PRIMARY KEY will create implicit index "rowacl_tbl_p_pkey" for table "rowacl_tbl_p"
GRANT all ON ROWACL_TBL_P TO public;
CREATE TABLE ROWACL_TBL_F (x int references ROWACL_TBL_P(a) ON UPDATE CASCADE, y text)
	WITH (row_level_acl=on);
GRANT all ON ROWACL_TBL_F TO public;
INSERT INTO ROWACL_TBL_P VALUES (1, 'aaa'), (2, 'bbb'), (3, 'ccc');
INSERT INTO ROWACL_TBL_P (tuple_acl, a, b) VALUES ('{ragroup=w/rausr_o}', 4, 'ddd');
COPY ROWACL_TBL_P (tuple_acl, a, b) FROM stdin;
SELECT tuple_acl, * FROM ROWACL_TBL_P;
      tuple_acl       | a |  b  
----------------------+---+-----
                      | 1 | aaa
                      | 2 | bbb
                      | 3 | ccc
 {ragroup=w/rausr_o}  | 4 | ddd
 {ragroup=wd/rausr_o} | 5 | eee
 {ragroup=d/rausr_o}  | 6 | fff
                      | 7 | ggg
 {}                   | 8 | hhh
(8 rows)

UPDATE ROWACL_TBL_P SET tuple_acl = rowacl_revoke(tableoid, tuple_acl, 'public', 'all')
	WHERE a in (1, 3, 5, 7);
UPDATE ROWACL_TBL_P SET tuple_acl = rowacl_grant(tableoid, tuple_acl, 'rausr_x', 'select')
	WHERE a in (1, 2, 3, 4, 5);
UPDATE ROWACL_TBL_P SET tuple_acl = rowacl_grant(tableoid, tuple_acl, 'rausr_x', 'references')
	WHERE a in (3, 4, 5, 6, 7);
UPDATE ROWACL_TBL_P SET tuple_acl = rowacl_grant(tableoid, tuple_acl, 'rausr_y', 'select,update')
	WHERE a in (2, 4, 6);
UPDATE ROWACL_TBL_P SET tuple_acl = rowacl_grant(tableoid, tuple_acl, 'rausr_y', 'delete')
	WHERE a in (3, 5, 7);
SELECT tuple_acl, * FROM ROWACL_TBL_P;
                         tuple_acl                         | a |  b  
-----------------------------------------------------------+---+-----
 {}                                                        | 8 | hhh
 {rausr_x=r/rausr_o}                                       | 1 | aaa
 {=rwdx/rausr_o,rausr_x=r/rausr_o,rausr_y=rw/rausr_o}      | 2 | bbb
 {ragroup=w/rausr_o,rausr_x=rx/rausr_o,rausr_y=rw/rausr_o} | 4 | ddd
 {ragroup=d/rausr_o,rausr_x=x/rausr_o,rausr_y=rw/rausr_o}  | 6 | fff
 {rausr_x=rx/rausr_o,rausr_y=d/rausr_o}                    | 3 | ccc
 {ragroup=wd/rausr_o,rausr_x=rx/rausr_o,rausr_y=d/rausr_o} | 5 | eee
 {rausr_x=x/rausr_o,rausr_y=d/rausr_o}                     | 7 | ggg
(8 rows)

INSERT INTO ROWACL_TBL_F (tuple_acl, x, y) VALUES ('', 1, 'red');
INSERT INTO ROWACL_TBL_F (tuple_acl, x, y) VALUES ('{ragroup=rw/rausr_o}', 2, 'blue');
INSERT INTO ROWACL_TBL_F (tuple_acl, x, y) VALUES ('{ragroup=wdx/rausr_o}', 3, 'green');
INSERT INTO ROWACL_TBL_F (tuple_acl, x, y) VALUES ('{ragroup=rd/rausr_o}', 4, 'yellow');
INSERT INTO ROWACL_TBL_F (tuple_acl, x, y) VALUES ('{ragroup=rx/rausr_o}', 5, 'orange');
SELECT tuple_acl, * FROM ROWACL_TBL_F;
       tuple_acl       | x |   y    
-----------------------+---+--------
                       | 1 | red
 {ragroup=rw/rausr_o}  | 2 | blue
 {ragroup=wdx/rausr_o} | 3 | green
 {ragroup=rd/rausr_o}  | 4 | yellow
 {ragroup=rx/rausr_o}  | 5 | orange
(5 rows)

\c -
-- test rausr_x privileges
SET SESSION AUTHORIZATION rausr_x;
SELECT tuple_acl, * FROM ROWACL_TBL_P;
                         tuple_acl                         | a |  b  
-----------------------------------------------------------+---+-----
 {rausr_x=r/rausr_o}                                       | 1 | aaa
 {=rwdx/rausr_o,rausr_x=r/rausr_o,rausr_y=rw/rausr_o}      | 2 | bbb
 {ragroup=w/rausr_o,rausr_x=rx/rausr_o,rausr_y=rw/rausr_o} | 4 | ddd
 {rausr_x=rx/rausr_o,rausr_y=d/rausr_o}                    | 3 | ccc
 {ragroup=wd/rausr_o,rausr_x=rx/rausr_o,rausr_y=d/rausr_o} | 5 | eee
(5 rows)

SELECT tuple_acl, * FROM ROWACL_TBL_F;
      tuple_acl       | x |   y    
----------------------+---+--------
                      | 1 | red
 {ragroup=rw/rausr_o} | 2 | blue
 {ragroup=rd/rausr_o} | 4 | yellow
 {ragroup=rx/rausr_o} | 5 | orange
(4 rows)

BEGIN;
DELETE FROM ROWACL_TBL_F;
SELECT * FROM ROWACL_TBL_F;
 x |   y    
---+--------
 2 | blue
 5 | orange
(2 rows)

ROLLBACK;
BEGIN;
DELETE FROM ROWACL_TBL_F RETURNING *;
 x |   y    
---+--------
 1 | red
 4 | yellow
(2 rows)

ROLLBACK;
BEGIN;
UPDATE ROWACL_TBL_F SET y = y || '_updt';
SELECT * FROM ROWACL_TBL_F;
 x |     y     
---+-----------
 4 | yellow
 5 | orange
 1 | red_updt
 2 | blue_updt
(4 rows)

ROLLBACK;
BEGIN;
UPDATE ROWACL_TBL_F SET y = y || '_updt' RETURNING *;
 x |     y     
---+-----------
 1 | red_updt
 2 | blue_updt
(2 rows)

ROLLBACK;
BEGIN;
INSERT INTO ROWACL_TBL_F VALUES (1, 'gold');	-- to be failed
ERROR:  insert or update on table "rowacl_tbl_f" violates foreign key constraint "rowacl_tbl_f_x_fkey"
DETAIL:  Key (x)=(1) is not present in table "rowacl_tbl_p".
SELECT * FROM ROWACL_TBL_F;
ERROR:  current transaction is aborted, commands ignored until end of transaction block
ROLLBACK;
BEGIN;
INSERT INTO ROWACL_TBL_F VALUES (7, 'gold');
SELECT * FROM ROWACL_TBL_F;
 x |   y    
---+--------
 1 | red
 2 | blue
 4 | yellow
 5 | orange
 7 | gold
(5 rows)

ROLLBACK;
BEGIN;
UPDATE ROWACL_TBL_P SET a = 99 WHERE a = 2;
SELECT * FROM ROWACL_TBL_P;
 a  |  b  
----+-----
  1 | aaa
  4 | ddd
  3 | ccc
  5 | eee
 99 | bbb
(5 rows)

ROLLBACK;
BEGIN;
UPDATE ROWACL_TBL_P SET a = 99 WHERE a = 4;	-- to be failed
ERROR:  access violation in row-level acl
CONTEXT:  SQL statement "UPDATE ONLY "public"."rowacl_tbl_f" SET "x" = $1 WHERE $2 OPERATOR(pg_catalog.=) "x""
SELECT * FROM ROWACL_TBL_P;
ERROR:  current transaction is aborted, commands ignored until end of transaction block
ROLLBACK;
\c -
-- test rausr_y privileges
SET SESSION AUTHORIZATION rausr_y;
SELECT tuple_acl, * FROM ROWACL_TBL_P;
                         tuple_acl                         | a |  b  
-----------------------------------------------------------+---+-----
 {=rwdx/rausr_o,rausr_x=r/rausr_o,rausr_y=rw/rausr_o}      | 2 | bbb
 {ragroup=w/rausr_o,rausr_x=rx/rausr_o,rausr_y=rw/rausr_o} | 4 | ddd
 {ragroup=d/rausr_o,rausr_x=x/rausr_o,rausr_y=rw/rausr_o}  | 6 | fff
(3 rows)

SELECT tuple_acl, * FROM ROWACL_TBL_F;
      tuple_acl       | x |   y    
----------------------+---+--------
                      | 1 | red
 {ragroup=rw/rausr_o} | 2 | blue
 {ragroup=rd/rausr_o} | 4 | yellow
 {ragroup=rx/rausr_o} | 5 | orange
(4 rows)

BEGIN;
DELETE FROM ROWACL_TBL_F;
SELECT * FROM ROWACL_TBL_F;
 x |   y    
---+--------
 2 | blue
 5 | orange
(2 rows)

ROLLBACK;
BEGIN;
DELETE FROM ROWACL_TBL_F RETURNING *;
 x |   y    
---+--------
 1 | red
 4 | yellow
(2 rows)

ROLLBACK;
BEGIN;
UPDATE ROWACL_TBL_F SET y = y || '_updt';
SELECT * FROM ROWACL_TBL_F;
 x |     y     
---+-----------
 4 | yellow
 5 | orange
 1 | red_updt
 2 | blue_updt
(4 rows)

ROLLBACK;
BEGIN;
UPDATE ROWACL_TBL_F SET y = y || '_updt' RETURNING *;
 x |     y     
---+-----------
 1 | red_updt
 2 | blue_updt
(2 rows)

ROLLBACK;
SELECT * FROM ROWACL_TBL_P JOIN ROWACL_TBL_F ON a = x;
 a |  b  | x |   y    
---+-----+---+--------
 2 | bbb | 2 | blue
 4 | ddd | 4 | yellow
(2 rows)

SELECT * FROM ROWACL_TBL_P LEFT OUTER JOIN ROWACL_TBL_F ON a = x;
 a |  b  | x |   y    
---+-----+---+--------
 2 | bbb | 2 | blue
 4 | ddd | 4 | yellow
 6 | fff |   | 
(3 rows)

\c -
-- test rausr_z privileges
SET SESSION AUTHORIZATION rausr_z;
SELECT tuple_acl, * FROM ROWACL_TBL_P;
                      tuple_acl                       | a |  b  
------------------------------------------------------+---+-----
 {=rwdx/rausr_o,rausr_x=r/rausr_o,rausr_y=rw/rausr_o} | 2 | bbb
(1 row)

SELECT tuple_acl, * FROM ROWACL_TBL_F;
 tuple_acl | x |  y  
-----------+---+-----
           | 1 | red
(1 row)

\c -
-- clean up
SET client_min_messages TO 'error';
DROP TABLE IF EXISTS ROWACL_TBL_F;
DROP TABLE IF EXISTS ROWACL_TBL_P;
DROP ROLE IF EXISTS ragroup;
DROP ROLE IF EXISTS rausr_o;
DROP ROLE IF EXISTS rausr_x;
DROP ROLE IF EXISTS rausr_y;
DROP ROLE IF EXISTS rausr_z;
RESET client_min_messages;
