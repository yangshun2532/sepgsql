--
-- Testcases for Row-level Database ACLs
--
SET client_min_messages TO 'error';
DROP TABLE IF EXISTS ratbl_f CASCADE;
DROP TABLE IF EXISTS ratbl_p CASCADE;
DROP ROLE IF EXISTS rausr_o;
DROP ROLE IF EXISTS rausr_x;
DROP ROLE IF EXISTS rausr_y;
RESET client_min_messages;
-- initial setup
CREATE USER rausr_o;	-- owner
CREATE USER rausr_x;
CREATE USER rausr_y;
SET SESSION AUTHORIZATION rausr_o;
CREATE TABLE ratbl_p
(
	a	int primary key,
	b	text
) WITH (row_level_acl=on);
NOTICE:  CREATE TABLE / PRIMARY KEY will create implicit index "ratbl_p_pkey" for table "ratbl_p"
GRANT all ON ratbl_p TO public;
CREATE TABLE ratbl_f
(
	x	int references ratbl_p(a)
		    ON DELETE SET NULL,
	y	text
) WITH (row_level_acl=on);
GRANT all ON ratbl_f TO public;
INSERT INTO ratbl_p VALUES (1, 'aaa');
INSERT INTO ratbl_p (security_acl, a, b)
       VALUES ('{rausr_x=r/rausr_o}',   2, 'bbb');
INSERT INTO ratbl_p (security_acl, a, b)
       VALUES ('{rausr_x=rw/rausr_o}',  3, 'ccc');
INSERT INTO ratbl_p (security_acl, a, b)
       VALUES ('{rausr_x=rd/rausr_o}',  4, 'ddd');
INSERT INTO ratbl_p (security_acl, a, b)
       VALUES ('{rausr_x=rx/rausr_o}',  5, 'eee');
INSERT INTO ratbl_p (security_acl, a, b)
       VALUES ('{rausr_x=x/rausr_o}',   6, 'fff');
INSERT INTO ratbl_p (security_acl, a, b)
       VALUES ('{rausr_x=wx/rausr_o}',  7, 'ggg');
INSERT INTO ratbl_p (security_acl, a, b)
       VALUES ('{rausr_x=dx/rausr_o}',  8, 'hhh');
INSERT INTO ratbl_p (security_acl, a, b)
       VALUES ('{rausr_y=r/rausr_o}',   9, 'BBB');
INSERT INTO ratbl_p (security_acl, a, b)
       VALUES ('{rausr_y=rw/rausr_o}', 10, 'CCC');
INSERT INTO ratbl_p (security_acl, a, b)
       VALUES ('{rausr_y=rd/rausr_o}', 11, 'DDD');
INSERT INTO ratbl_p (security_acl, a, b)
       VALUES ('{rausr_y=rx/rausr_o}', 12, 'EEE');
INSERT INTO ratbl_p (security_acl, a, b)
       VALUES ('{rausr_y=x/rausr_o}',  13, 'FFF');
INSERT INTO ratbl_p (security_acl, a, b)
       VALUES ('{rausr_y=wx/rausr_o}', 14, 'GGG');
INSERT INTO ratbl_p (security_acl, a, b)
       VALUES ('{rausr_y=dx/rausr_o}', 15, 'HHH');
INSERT INTO ratbl_p (security_acl, a, b)
       VALUES ('{rausr_x=rw/rausr_o,rausr_y=rd/rausr_o}', 20, 'xxx');
INSERT INTO ratbl_p (security_acl, a, b)
       VALUES ('{rausr_x=rd/rausr_o,rausr_y=rw/rausr_o}', 21, 'yyy');
INSERT INTO ratbl_p (security_acl, a, b)
       VALUES ('{rausr_x=r/rausr_o,rausr_y=r/rausr_o}',   22, 'zzz');
INSERT INTO ratbl_p (security_acl, a, b)
       VALUES (NULL, 30, 'xxx');	-- to be failed
ERROR:  setting NULL on "security_acl" system column is not supported
INSERT INTO ratbl_p (security_acl, a, b)
       VALUES ('{invalid acl}', 30, 'xxx');	-- to be failed
ERROR:  unrecognized key word: "invalid"
LINE 2:        VALUES ('{invalid acl}', 30, 'xxx');
                       ^
HINT:  ACL key word must be "group" or "user".
-- it allows owner to see all tuples
SELECT security_acl, * FROM ratbl_p;
              security_acl               | a  |  b  
-----------------------------------------+----+-----
 {=rwdx/rausr_o}                         |  1 | aaa
 {rausr_x=r/rausr_o}                     |  2 | bbb
 {rausr_x=rw/rausr_o}                    |  3 | ccc
 {rausr_x=rd/rausr_o}                    |  4 | ddd
 {rausr_x=rx/rausr_o}                    |  5 | eee
 {rausr_x=x/rausr_o}                     |  6 | fff
 {rausr_x=wx/rausr_o}                    |  7 | ggg
 {rausr_x=dx/rausr_o}                    |  8 | hhh
 {rausr_y=r/rausr_o}                     |  9 | BBB
 {rausr_y=rw/rausr_o}                    | 10 | CCC
 {rausr_y=rd/rausr_o}                    | 11 | DDD
 {rausr_y=rx/rausr_o}                    | 12 | EEE
 {rausr_y=x/rausr_o}                     | 13 | FFF
 {rausr_y=wx/rausr_o}                    | 14 | GGG
 {rausr_y=dx/rausr_o}                    | 15 | HHH
 {rausr_x=rw/rausr_o,rausr_y=rd/rausr_o} | 20 | xxx
 {rausr_x=rd/rausr_o,rausr_y=rw/rausr_o} | 21 | yyy
 {rausr_x=r/rausr_o,rausr_y=r/rausr_o}   | 22 | zzz
(18 rows)

BEGIN;
UPDATE ratbl_p SET b = b || '_updt' RETURNING security_acl, *;
              security_acl               | a  |    b     
-----------------------------------------+----+----------
 {=rwdx/rausr_o}                         |  1 | aaa_updt
 {rausr_x=r/rausr_o}                     |  2 | bbb_updt
 {rausr_x=rw/rausr_o}                    |  3 | ccc_updt
 {rausr_x=rd/rausr_o}                    |  4 | ddd_updt
 {rausr_x=rx/rausr_o}                    |  5 | eee_updt
 {rausr_x=x/rausr_o}                     |  6 | fff_updt
 {rausr_x=wx/rausr_o}                    |  7 | ggg_updt
 {rausr_x=dx/rausr_o}                    |  8 | hhh_updt
 {rausr_y=r/rausr_o}                     |  9 | BBB_updt
 {rausr_y=rw/rausr_o}                    | 10 | CCC_updt
 {rausr_y=rd/rausr_o}                    | 11 | DDD_updt
 {rausr_y=rx/rausr_o}                    | 12 | EEE_updt
 {rausr_y=x/rausr_o}                     | 13 | FFF_updt
 {rausr_y=wx/rausr_o}                    | 14 | GGG_updt
 {rausr_y=dx/rausr_o}                    | 15 | HHH_updt
 {rausr_x=rw/rausr_o,rausr_y=rd/rausr_o} | 20 | xxx_updt
 {rausr_x=rd/rausr_o,rausr_y=rw/rausr_o} | 21 | yyy_updt
 {rausr_x=r/rausr_o,rausr_y=r/rausr_o}   | 22 | zzz_updt
(18 rows)

SELECT security_acl, * FROM ratbl_p;
              security_acl               | a  |    b     
-----------------------------------------+----+----------
 {=rwdx/rausr_o}                         |  1 | aaa_updt
 {rausr_x=r/rausr_o}                     |  2 | bbb_updt
 {rausr_x=rw/rausr_o}                    |  3 | ccc_updt
 {rausr_x=rd/rausr_o}                    |  4 | ddd_updt
 {rausr_x=rx/rausr_o}                    |  5 | eee_updt
 {rausr_x=x/rausr_o}                     |  6 | fff_updt
 {rausr_x=wx/rausr_o}                    |  7 | ggg_updt
 {rausr_x=dx/rausr_o}                    |  8 | hhh_updt
 {rausr_y=r/rausr_o}                     |  9 | BBB_updt
 {rausr_y=rw/rausr_o}                    | 10 | CCC_updt
 {rausr_y=rd/rausr_o}                    | 11 | DDD_updt
 {rausr_y=rx/rausr_o}                    | 12 | EEE_updt
 {rausr_y=x/rausr_o}                     | 13 | FFF_updt
 {rausr_y=wx/rausr_o}                    | 14 | GGG_updt
 {rausr_y=dx/rausr_o}                    | 15 | HHH_updt
 {rausr_x=rw/rausr_o,rausr_y=rd/rausr_o} | 20 | xxx_updt
 {rausr_x=rd/rausr_o,rausr_y=rw/rausr_o} | 21 | yyy_updt
 {rausr_x=r/rausr_o,rausr_y=r/rausr_o}   | 22 | zzz_updt
(18 rows)

ABORT;
BEGIN;
DELETE FROM ratbl_p RETURNING security_acl, *;
              security_acl               | a  |  b  
-----------------------------------------+----+-----
 {=rwdx/rausr_o}                         |  1 | aaa
 {rausr_x=r/rausr_o}                     |  2 | bbb
 {rausr_x=rw/rausr_o}                    |  3 | ccc
 {rausr_x=rd/rausr_o}                    |  4 | ddd
 {rausr_x=rx/rausr_o}                    |  5 | eee
 {rausr_x=x/rausr_o}                     |  6 | fff
 {rausr_x=wx/rausr_o}                    |  7 | ggg
 {rausr_x=dx/rausr_o}                    |  8 | hhh
 {rausr_y=r/rausr_o}                     |  9 | BBB
 {rausr_y=rw/rausr_o}                    | 10 | CCC
 {rausr_y=rd/rausr_o}                    | 11 | DDD
 {rausr_y=rx/rausr_o}                    | 12 | EEE
 {rausr_y=x/rausr_o}                     | 13 | FFF
 {rausr_y=wx/rausr_o}                    | 14 | GGG
 {rausr_y=dx/rausr_o}                    | 15 | HHH
 {rausr_x=rw/rausr_o,rausr_y=rd/rausr_o} | 20 | xxx
 {rausr_x=rd/rausr_o,rausr_y=rw/rausr_o} | 21 | yyy
 {rausr_x=r/rausr_o,rausr_y=r/rausr_o}   | 22 | zzz
(18 rows)

SELECT security_acl, * FROM ratbl_p;
 security_acl | a | b 
--------------+---+---
(0 rows)

ABORT;
-- switch to superuser
\c -
SELECT security_acl, * FROM ratbl_p;
              security_acl               | a  |  b  
-----------------------------------------+----+-----
 {=rwdx/rausr_o}                         |  1 | aaa
 {rausr_x=r/rausr_o}                     |  2 | bbb
 {rausr_x=rw/rausr_o}                    |  3 | ccc
 {rausr_x=rd/rausr_o}                    |  4 | ddd
 {rausr_x=rx/rausr_o}                    |  5 | eee
 {rausr_x=x/rausr_o}                     |  6 | fff
 {rausr_x=wx/rausr_o}                    |  7 | ggg
 {rausr_x=dx/rausr_o}                    |  8 | hhh
 {rausr_y=r/rausr_o}                     |  9 | BBB
 {rausr_y=rw/rausr_o}                    | 10 | CCC
 {rausr_y=rd/rausr_o}                    | 11 | DDD
 {rausr_y=rx/rausr_o}                    | 12 | EEE
 {rausr_y=x/rausr_o}                     | 13 | FFF
 {rausr_y=wx/rausr_o}                    | 14 | GGG
 {rausr_y=dx/rausr_o}                    | 15 | HHH
 {rausr_x=rw/rausr_o,rausr_y=rd/rausr_o} | 20 | xxx
 {rausr_x=rd/rausr_o,rausr_y=rw/rausr_o} | 21 | yyy
 {rausr_x=r/rausr_o,rausr_y=r/rausr_o}   | 22 | zzz
(18 rows)

BEGIN;
UPDATE ratbl_p SET b = b || '_updt' RETURNING security_acl, *;
              security_acl               | a  |    b     
-----------------------------------------+----+----------
 {=rwdx/rausr_o}                         |  1 | aaa_updt
 {rausr_x=r/rausr_o}                     |  2 | bbb_updt
 {rausr_x=rw/rausr_o}                    |  3 | ccc_updt
 {rausr_x=rd/rausr_o}                    |  4 | ddd_updt
 {rausr_x=rx/rausr_o}                    |  5 | eee_updt
 {rausr_x=x/rausr_o}                     |  6 | fff_updt
 {rausr_x=wx/rausr_o}                    |  7 | ggg_updt
 {rausr_x=dx/rausr_o}                    |  8 | hhh_updt
 {rausr_y=r/rausr_o}                     |  9 | BBB_updt
 {rausr_y=rw/rausr_o}                    | 10 | CCC_updt
 {rausr_y=rd/rausr_o}                    | 11 | DDD_updt
 {rausr_y=rx/rausr_o}                    | 12 | EEE_updt
 {rausr_y=x/rausr_o}                     | 13 | FFF_updt
 {rausr_y=wx/rausr_o}                    | 14 | GGG_updt
 {rausr_y=dx/rausr_o}                    | 15 | HHH_updt
 {rausr_x=rw/rausr_o,rausr_y=rd/rausr_o} | 20 | xxx_updt
 {rausr_x=rd/rausr_o,rausr_y=rw/rausr_o} | 21 | yyy_updt
 {rausr_x=r/rausr_o,rausr_y=r/rausr_o}   | 22 | zzz_updt
(18 rows)

ABORT;
BEGIN;
DELETE FROM ratbl_p RETURNING security_acl, *;
              security_acl               | a  |  b  
-----------------------------------------+----+-----
 {=rwdx/rausr_o}                         |  1 | aaa
 {rausr_x=r/rausr_o}                     |  2 | bbb
 {rausr_x=rw/rausr_o}                    |  3 | ccc
 {rausr_x=rd/rausr_o}                    |  4 | ddd
 {rausr_x=rx/rausr_o}                    |  5 | eee
 {rausr_x=x/rausr_o}                     |  6 | fff
 {rausr_x=wx/rausr_o}                    |  7 | ggg
 {rausr_x=dx/rausr_o}                    |  8 | hhh
 {rausr_y=r/rausr_o}                     |  9 | BBB
 {rausr_y=rw/rausr_o}                    | 10 | CCC
 {rausr_y=rd/rausr_o}                    | 11 | DDD
 {rausr_y=rx/rausr_o}                    | 12 | EEE
 {rausr_y=x/rausr_o}                     | 13 | FFF
 {rausr_y=wx/rausr_o}                    | 14 | GGG
 {rausr_y=dx/rausr_o}                    | 15 | HHH
 {rausr_x=rw/rausr_o,rausr_y=rd/rausr_o} | 20 | xxx
 {rausr_x=rd/rausr_o,rausr_y=rw/rausr_o} | 21 | yyy
 {rausr_x=r/rausr_o,rausr_y=r/rausr_o}   | 22 | zzz
(18 rows)

ABORT;
-- switch to rausr_x
SET SESSION AUTHORIZATION rausr_x;
SELECT security_acl, * FROM ratbl_p;
              security_acl               | a  |  b  
-----------------------------------------+----+-----
 {=rwdx/rausr_o}                         |  1 | aaa
 {rausr_x=r/rausr_o}                     |  2 | bbb
 {rausr_x=rw/rausr_o}                    |  3 | ccc
 {rausr_x=rd/rausr_o}                    |  4 | ddd
 {rausr_x=rx/rausr_o}                    |  5 | eee
 {rausr_x=rw/rausr_o,rausr_y=rd/rausr_o} | 20 | xxx
 {rausr_x=rd/rausr_o,rausr_y=rw/rausr_o} | 21 | yyy
 {rausr_x=r/rausr_o,rausr_y=r/rausr_o}   | 22 | zzz
(8 rows)

BEGIN;
UPDATE ratbl_p SET b = b || '_updt' RETURNING security_acl, *;
              security_acl               | a  |    b     
-----------------------------------------+----+----------
 {=rwdx/rausr_o}                         |  1 | aaa_updt
 {rausr_x=rw/rausr_o}                    |  3 | ccc_updt
 {rausr_x=rw/rausr_o,rausr_y=rd/rausr_o} | 20 | xxx_updt
(3 rows)

UPDATE ratbl_p SET b = b || '_updt';
SELECT security_acl, * FROM ratbl_p;
              security_acl               | a  |       b       
-----------------------------------------+----+---------------
 {rausr_x=r/rausr_o}                     |  2 | bbb
 {rausr_x=rd/rausr_o}                    |  4 | ddd
 {rausr_x=rx/rausr_o}                    |  5 | eee
 {rausr_x=rd/rausr_o,rausr_y=rw/rausr_o} | 21 | yyy
 {rausr_x=r/rausr_o,rausr_y=r/rausr_o}   | 22 | zzz
 {=rwdx/rausr_o}                         |  1 | aaa_updt_updt
 {rausr_x=rw/rausr_o}                    |  3 | ccc_updt_updt
 {rausr_x=rw/rausr_o,rausr_y=rd/rausr_o} | 20 | xxx_updt_updt
(8 rows)

ABORT;
BEGIN;
DELETE FROM ratbl_p RETURNING security_acl, *;
              security_acl               | a  |  b  
-----------------------------------------+----+-----
 {=rwdx/rausr_o}                         |  1 | aaa
 {rausr_x=rd/rausr_o}                    |  4 | ddd
 {rausr_x=rd/rausr_o,rausr_y=rw/rausr_o} | 21 | yyy
(3 rows)

DELETE FROM ratbl_p;
SELECT security_acl, * FROM ratbl_p;
              security_acl               | a  |  b  
-----------------------------------------+----+-----
 {rausr_x=r/rausr_o}                     |  2 | bbb
 {rausr_x=rw/rausr_o}                    |  3 | ccc
 {rausr_x=rx/rausr_o}                    |  5 | eee
 {rausr_x=rw/rausr_o,rausr_y=rd/rausr_o} | 20 | xxx
 {rausr_x=r/rausr_o,rausr_y=r/rausr_o}   | 22 | zzz
(5 rows)

ABORT;
\c -
-- switch to rausr_y
SET SESSION AUTHORIZATION rausr_y;
SELECT security_acl, * FROM ratbl_p;
              security_acl               | a  |  b  
-----------------------------------------+----+-----
 {=rwdx/rausr_o}                         |  1 | aaa
 {rausr_y=r/rausr_o}                     |  9 | BBB
 {rausr_y=rw/rausr_o}                    | 10 | CCC
 {rausr_y=rd/rausr_o}                    | 11 | DDD
 {rausr_y=rx/rausr_o}                    | 12 | EEE
 {rausr_x=rw/rausr_o,rausr_y=rd/rausr_o} | 20 | xxx
 {rausr_x=rd/rausr_o,rausr_y=rw/rausr_o} | 21 | yyy
 {rausr_x=r/rausr_o,rausr_y=r/rausr_o}   | 22 | zzz
(8 rows)

BEGIN;
UPDATE ratbl_p SET b = b || '_updt' RETURNING security_acl, *;
              security_acl               | a  |    b     
-----------------------------------------+----+----------
 {=rwdx/rausr_o}                         |  1 | aaa_updt
 {rausr_y=rw/rausr_o}                    | 10 | CCC_updt
 {rausr_x=rd/rausr_o,rausr_y=rw/rausr_o} | 21 | yyy_updt
(3 rows)

UPDATE ratbl_p SET b = b || '_updt';
SELECT security_acl, * FROM ratbl_p;
              security_acl               | a  |       b       
-----------------------------------------+----+---------------
 {rausr_y=r/rausr_o}                     |  9 | BBB
 {rausr_y=rd/rausr_o}                    | 11 | DDD
 {rausr_y=rx/rausr_o}                    | 12 | EEE
 {rausr_x=rw/rausr_o,rausr_y=rd/rausr_o} | 20 | xxx
 {rausr_x=r/rausr_o,rausr_y=r/rausr_o}   | 22 | zzz
 {=rwdx/rausr_o}                         |  1 | aaa_updt_updt
 {rausr_y=rw/rausr_o}                    | 10 | CCC_updt_updt
 {rausr_x=rd/rausr_o,rausr_y=rw/rausr_o} | 21 | yyy_updt_updt
(8 rows)

ABORT;
BEGIN;
DELETE FROM ratbl_p RETURNING *;
 a  |  b  
----+-----
  1 | aaa
 11 | DDD
 20 | xxx
(3 rows)

DELETE FROM ratbl_p;
SELECT security_acl, * FROM ratbl_p;
              security_acl               | a  |  b  
-----------------------------------------+----+-----
 {rausr_y=r/rausr_o}                     |  9 | BBB
 {rausr_y=rw/rausr_o}                    | 10 | CCC
 {rausr_y=rx/rausr_o}                    | 12 | EEE
 {rausr_x=rd/rausr_o,rausr_y=rw/rausr_o} | 21 | yyy
 {rausr_x=r/rausr_o,rausr_y=r/rausr_o}   | 22 | zzz
(5 rows)

ABORT;
\c -
-- switch to rausr_x again (For FK/PK testing)
SET SESSION AUTHORIZATION rausr_x;
INSERT INTO ratbl_p VALUES(6, 'fff');	-- to be failed
ERROR:  duplicate key value violates unique constraint "ratbl_p_pkey"
INSERT INTO ratbl_p (security_acl, a, b)
       VALUES ('{=r/rausr_x}', 30, 'xxx');	-- to be failed
ERROR:  Only owner or superuser can set ACL
INSERT INTO ratbl_f VALUES ( 1, 'red');
INSERT INTO ratbl_f VALUES ( 2, 'blue');		-- to be failed
ERROR:  insert or update on table "ratbl_f" violates foreign key constraint "ratbl_f_x_fkey"
DETAIL:  Key (x)=(2) is not present in table "ratbl_p".
INSERT INTO ratbl_f VALUES ( 5, 'green');
INSERT INTO ratbl_f VALUES ( 6, 'yellow');
INSERT INTO ratbl_f VALUES ( 7, 'orange');
INSERT INTO ratbl_f VALUES ( 8, 'pink');
INSERT INTO ratbl_f VALUES (10, 'white');	-- to be failed
ERROR:  insert or update on table "ratbl_f" violates foreign key constraint "ratbl_f_x_fkey"
DETAIL:  Key (x)=(10) is not present in table "ratbl_p".
INSERT INTO ratbl_f VALUES (12, 'black');	-- to be failed
ERROR:  insert or update on table "ratbl_f" violates foreign key constraint "ratbl_f_x_fkey"
DETAIL:  Key (x)=(12) is not present in table "ratbl_p".
SELECT security_acl, * FROM ratbl_f;
  security_acl   | x |   y    
-----------------+---+--------
 {=rwdx/rausr_o} | 1 | red
 {=rwdx/rausr_o} | 5 | green
 {=rwdx/rausr_o} | 6 | yellow
 {=rwdx/rausr_o} | 7 | orange
 {=rwdx/rausr_o} | 8 | pink
(5 rows)

\c -
-- switch to rausr_o again
SET SESSION AUTHORIZATION rausr_o;
UPDATE ratbl_f SET security_acl = '{rausr_x=r/rausr_o}' WHERE x = 5;
UPDATE ratbl_f SET security_acl = '{rausr_x=x/rausr_o}' WHERE x = 6;
UPDATE ratbl_f SET security_acl = '{rausr_x=w/rausr_o}' WHERE x = 7;
UPDATE ratbl_f SET security_acl = '{rausr_x=d/rausr_o}' WHERE x = 8;
\c -
-- switch to rausr_x again
SET SESSION AUTHORIZATION rausr_x;
SELECT security_acl, * FROM ratbl_p;
              security_acl               | a  |  b  
-----------------------------------------+----+-----
 {=rwdx/rausr_o}                         |  1 | aaa
 {rausr_x=r/rausr_o}                     |  2 | bbb
 {rausr_x=rw/rausr_o}                    |  3 | ccc
 {rausr_x=rd/rausr_o}                    |  4 | ddd
 {rausr_x=rx/rausr_o}                    |  5 | eee
 {rausr_x=rw/rausr_o,rausr_y=rd/rausr_o} | 20 | xxx
 {rausr_x=rd/rausr_o,rausr_y=rw/rausr_o} | 21 | yyy
 {rausr_x=r/rausr_o,rausr_y=r/rausr_o}   | 22 | zzz
(8 rows)

SELECT security_acl, * FROM ratbl_f;
    security_acl     | x |   y   
---------------------+---+-------
 {=rwdx/rausr_o}     | 1 | red
 {rausr_x=r/rausr_o} | 5 | green
(2 rows)

UPDATE ratbl_p SET a = 300 WHERE a = 3;
UPDATE ratbl_p SET a = 700 WHERE a = 7;		-- to be failed
ERROR:  access violation in row-level acl
CONTEXT:  SQL statement "SELECT 1 FROM ONLY "public"."ratbl_f" x WHERE $1 OPERATOR(pg_catalog.=) "x" FOR SHARE OF x"
DELETE FROM ratbl_p WHERE a = 4;
DELETE FROM ratbl_p WHERE a = 8;		-- to be failed
ERROR:  access violation in row-level acl
CONTEXT:  SQL statement "UPDATE ONLY "public"."ratbl_f" SET "x" = NULL WHERE $1 OPERATOR(pg_catalog.=) "x""
SELECT security_acl, * FROM ratbl_p;
              security_acl               |  a  |  b  
-----------------------------------------+-----+-----
 {=rwdx/rausr_o}                         |   1 | aaa
 {rausr_x=r/rausr_o}                     |   2 | bbb
 {rausr_x=rx/rausr_o}                    |   5 | eee
 {rausr_x=rw/rausr_o,rausr_y=rd/rausr_o} |  20 | xxx
 {rausr_x=rd/rausr_o,rausr_y=rw/rausr_o} |  21 | yyy
 {rausr_x=r/rausr_o,rausr_y=r/rausr_o}   |  22 | zzz
 {rausr_x=rw/rausr_o}                    | 300 | ccc
(7 rows)

\c -
-- switch to rausr_o again (TABLE Option related)
SET SESSION AUTHORIZATION rausr_o;
DELETE FROM ratbl_p WHERE a > 8;
ALTER TABLE ratbl_p SET (row_level_acl=off);
INSERT INTO ratbl_p VALUES (40, 'foo');
INSERT INTO ratbl_p VALUES (41, 'var');
INSERT INTO ratbl_p (security_acl, a, b)
       VALUES ('{rausr_y=rx/rausr_o}', 42, 'baz');	-- to be failed
ERROR:  Row-level ACLs are unavailable for relation: ratbl_p
SELECT security_acl, * FROM ratbl_p;
 security_acl | a  |  b  
--------------+----+-----
              |  1 | aaa
              |  2 | bbb
              |  5 | eee
              |  6 | fff
              |  7 | ggg
              |  8 | hhh
              | 40 | foo
              | 41 | var
(8 rows)

ALTER TABLE ratbl_p SET (row_level_acl=on);
INSERT INTO ratbl_p (security_acl, a, b)
       VALUES ('{rausr_y=rx/rausr_o}', 42, 'baz');
SELECT security_acl, * FROM ratbl_p;
     security_acl     | a  |  b  
----------------------+----+-----
 {=rwdx/rausr_o}      |  1 | aaa
 {rausr_x=r/rausr_o}  |  2 | bbb
 {rausr_x=rx/rausr_o} |  5 | eee
 {rausr_x=x/rausr_o}  |  6 | fff
 {rausr_x=wx/rausr_o} |  7 | ggg
 {rausr_x=dx/rausr_o} |  8 | hhh
 {=rwdx/rausr_o}      | 40 | foo
 {=rwdx/rausr_o}      | 41 | var
 {rausr_y=rx/rausr_o} | 42 | baz
(9 rows)

ALTER TABLE ratbl_p SET (default_row_acl='{rausr_x=rd/rausr_o,rausr_y=rw}');
WARNING:  defaulting grantor to user ID 10
INSERT INTO ratbl_p VALUES (50, 'coffee');
INSERT INTO ratbl_p (security_acl, a, b)
       VALUES ('{rausr_x=r/rausr_o}', 51, 'juice');
SELECT security_acl, * FROM ratbl_p;
              security_acl              | a  |   b    
----------------------------------------+----+--------
 {=rwdx/rausr_o}                        |  1 | aaa
 {rausr_x=r/rausr_o}                    |  2 | bbb
 {rausr_x=rx/rausr_o}                   |  5 | eee
 {rausr_x=x/rausr_o}                    |  6 | fff
 {rausr_x=wx/rausr_o}                   |  7 | ggg
 {rausr_x=dx/rausr_o}                   |  8 | hhh
 {=rwdx/rausr_o}                        | 40 | foo
 {=rwdx/rausr_o}                        | 41 | var
 {rausr_y=rx/rausr_o}                   | 42 | baz
 {rausr_x=rd/rausr_o,rausr_y=rw/kaigai} | 50 | coffee
 {rausr_x=r/rausr_o}                    | 51 | juice
(11 rows)

ALTER TABLE ratbl_p RESET (default_row_acl);
INSERT INTO ratbl_p VALUES (52, 'coke');
INSERT INTO ratbl_p (security_acl, a, b)
       VALUES ('{rausr_x=rwd/rausr_o}', 53, 'red tea');	-- to be failed
SELECT security_acl, * FROM ratbl_p;
              security_acl              | a  |    b    
----------------------------------------+----+---------
 {=rwdx/rausr_o}                        |  1 | aaa
 {rausr_x=r/rausr_o}                    |  2 | bbb
 {rausr_x=rx/rausr_o}                   |  5 | eee
 {rausr_x=x/rausr_o}                    |  6 | fff
 {rausr_x=wx/rausr_o}                   |  7 | ggg
 {rausr_x=dx/rausr_o}                   |  8 | hhh
 {=rwdx/rausr_o}                        | 40 | foo
 {=rwdx/rausr_o}                        | 41 | var
 {rausr_y=rx/rausr_o}                   | 42 | baz
 {rausr_x=rd/rausr_o,rausr_y=rw/kaigai} | 50 | coffee
 {rausr_x=r/rausr_o}                    | 51 | juice
 {=rwdx/rausr_o}                        | 52 | coke
 {rausr_x=rwd/rausr_o}                  | 53 | red tea
(13 rows)

\c -
-- cleanups
SET client_min_messages TO 'error';
DROP TABLE IF EXISTS ratbl_f CASCADE;
DROP TABLE IF EXISTS ratbl_p CASCADE;
DROP ROLE IF EXISTS rausr_o;
DROP ROLE IF EXISTS rausr_x;
DROP ROLE IF EXISTS rausr_y;
RESET client_min_messages;
