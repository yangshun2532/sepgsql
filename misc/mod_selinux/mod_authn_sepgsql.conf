#
# mod_authn_sepgsql.conf
# ----------------------
# Apache/SELinux plus authentication configuration
#

LoadModule authn_sepgsql_module modules/mod_authn_sepgsql.so

# Example for Basic authentication with database backend
#
# <Directory "/var/www/html">
# AuthType		Basic
# AuthName		"Secret Zone"
# AuthBasicProvider	sepgsql
# Require		valid-user
#
# #-- Database connection paramter
# AuthSepgsqlHost	localhost
# AuthSepgsqlPort	5432
# AuthSepgsqlDatabase	apache
# AuthSepgsqlDbUser	apache
# AuthSepgsqlDbPass	xxxxxx
#
# #-- Query for basic authentication
# AuthSepgsqlCheckQuery	check_result	"SELECT $(password) = upass AS check_result, udomain, umail FROM uaccount WHERE uname = $(user)"
#
# #-- Query for digest authentication
# AuthSepgsqlHashQuery	hash_result	"SELECT md5(uname || ':' || $(realm) || ':' || upass) AS hash_result, udomain, umail FROM uaccount WHERE uname = $(user)"
# 
# #-- It allows to export extra informations
# AuthSepgsqlSetEnv	umail	AUTH_SEPGSQL_USERMAIL
# AuthSepgsqlSetEnv	udomain	AUTH_SEPGSQL_DOMAIN
#
# <IfModule mod_selinux.c>
# selinuxDomainEnv	AUTH_SEPGSQL_DOMAIN
# selinuxDomainSet	anon_webapp_t:s0
# </IfModule>
#
#
# NOTE:
# The above example assumes user account informations are stored within
# "uaccount" table defined as follows:
# 
#   CREATE TABLE uaccount (
#       uname   varchar(64) PRIMARY KEY,
#       upass   varchar(64) NOTE NULL,
#       udomain varchar(64),
#       umail   varchar(128)
#   );
#   INSERT INTO uaccount (uname, upassm udomain, umail)
#       VALUES ('foo', 'xxx', 'staff_webapp_t:s0:c0', 'foo@example.com');
#   INSERT INTO uaccount (uname, upassm udomain, umail)
#       VALUES ('var', 'yyy', 'user_webapp_t:s0:c1', 'var@example.com');
#   INSERT INTO uaccount (uname, upassm udomain, umail)
#       VALUES ('baz', 'zzz', 'anon_webapp_t:s0:c2', 'baz@example.com');
#
# When mod_authn_sepgsql executes the query configured at AuthSepgsqlCheckQuery
# for basic authentication, its result field (explicitly specified or the head
# of column list) needs to be BOOL type.
# When it executes the query configured at AuthSepgsqlHashQuery for digest
# authentication, its result field needs to be TEXT or compatible type which
# represents the result of md5(user:realm:pass).
#
# </Directory>
