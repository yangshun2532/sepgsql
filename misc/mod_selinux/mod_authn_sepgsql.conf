#
# mod_authn_sepgsql.conf
# ----------------------
# Apache/SELinux plus authentication configuration
#

LoadModule authn_sepgsql_module modules/mod_authn_sepgsql.so

# Example for Basic authentication with database backend
#
# <Directory "/var/www/html">
# AuthType	Basic
# AuthName	"Secret Zone"
# AuthBasicProvider	sepgsql
# Require	valid-user
#
# #-- Database connection paramter
# AuthSepgsqlHost	localhost
# AuthSepgsqlPort	5432
# AuthSepgsqlDatabase	apache
# AuthSepgsqlDbUser	apache
# AuthSepgsqlDbPass	xxxxxx
#
# #-- Query for basic authentication
# AuthSepgsqlCheckQuery	"SELECT $(password) = upass AS check_result, uid, udomain FROM uaccount WHERE uname = $(user)"
# AuthSepgsqlCheckField		check_result
#
# #-- Query for digest authentication
# AuthSepgsqlHashQuery	"SELECT md5(uname || ':' || $(realm) || ':' || upass) AS hash_result, uid, udomain FROM uaccount WHERE uname = $(user)"
# 
# #-- It allows to export extra informations
# AuthSepgsqlSetEnvField	uid	AUTH_SEPGSQL_USERID
# AuthSepgsqlSetEnvField	udomain	AUTH_SEPGSQL_DOMAIN
#
# <IfModule mod_selinux.c>
# selinuxDomainEnv	AUTH_SEPGSQL_DOMAIN
# selinuxDomainSet	anon_webapp_t:s0
# </IfModule>
#
#
# NOTE:
# The above example assumes user account informations are stored within
# "uaccount" table defined as follows:
# 
#   CREATE TABLE uaccount (
#       uid     SERIAL PRIMARY KEY,
#       uname   TEXT,
#       upass   TEXT,
#       udomain TEXT,
#       UNIQUE(uname)
#   );
#   INSERT INTO uaccount(uname, upass, udomain)
#       VALUES ('foo', 'selinux', 'staff_webapp_t:s0:c0');
#   INSERT INTO uaccount(uname, upass, udomain)
#       VALUES ('var', 'selinux', 'user_webapp_t:s0:c1');
#   INSERT INTO uaccount(uname, upass, udomain)
#       VALUES ('baz', 'selinux', '*:s0:c2');
#
# When the mod_authn_sepgsql executes the query configured at AuthSepgsqlCheckQuery,
# the field specified by AuthSepgsqlCheckField should have BOOL type.
# When it executes the the query configured at AuthSepgsqlHashQuery, the field
# specified by AuthSepgsqlHashField should have TEXT or string type which can
# represent MD5(user:realm:pass) .
#
# </Directory>
